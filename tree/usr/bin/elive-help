#!/bin/bash
source /usr/lib/elive-tools/functions
# Lock system (good one) {{{
lockfile="/tmp/.$(basename $0)-${USER}.lock"

exit_ok(){
    rm -f "$lockfile"
}
exit_error(){
    rm -f "$lockfile"
}

if [[ -r "$lockfile" ]] ; then
    PROCCESS="$(cat $lockfile)"
else
    PROCCESS=" "
fi
if (ps up $PROCCESS) 1>/dev/null 2>&1 ; then
    # do not exit, we don't need to
    true
    #el_error "$(basename $0) already running"
    #zenity --error --text="Elive Help already running"
    #exit
else
    echo $$ > "$lockfile"
fi

# traps needs to be after the lock verification, in order to not remove it when we are already running
trap "exit_ok" EXIT
trap "exit_error" 1 3 5 6 14 15 ERR TERM

# SET the lock file
echo "$$" > "$lockfile"


# end lock system }}}

main(){
    # pre {{{
    local arg


    # }}}
    # args {{{

    # ugly hack, enable both by default
    is_hotkeys_mode=1
    is_guide_mode=1

    if [[ -n "$1" ]] ; then
        for arg in "$@"
        do
            case "$arg" in
                --hotkeys)
                    is_hotkeys_mode=1
                    is_guide_mode=0
                    shift
                    ;;
                --userguide)
                    is_guide_mode=1
                    is_hotkeys_mode=0
                    shift
                    ;;
                --fs)
                    is_mode_fullscreen=1
                    shift
                    ;;
                --nofs|--nofullscreen)
                    is_mode_fullscreen=0
                    shift
                    ;;
                -*)
                    opts="$arg $opts"
                    ;;
                #--all)
                    #is_hotkeys_mode=1
                    #is_guide_mode=1
                    #;;
            esac
        done
    fi
    # - args }}}

    # hotkeys
    if ((is_hotkeys_mode)) ; then
        # the previewer mode looks with an ugly icon and also you cannot scroll pages down with the mouse wheel
        #evince -w "/usr/share/elive-help/hotkeys/en/hotkeys.pdf"
        evince $opts "/usr/share/elive-help/hotkeys/en/hotkeys.pdf" &

        # maximize the window
        if ((is_mode_fullscreen)) ; then
            for i in $( seq 24 )
            do
                LC_ALL=C sleep 0.25

                window_id="$( enlightenment_remote -window-list | grep "^evince-previewer" | awk '{print $2}' )"
                if [[ -n "$window_id" ]] ; then
                    if [[ "$( echo "$window_id" | wc -w )" -gt 1 ]] ; then
                        # more than one window, do not do anything on this case
                        break
                    fi
                    # maximize and exit
                    enlightenment_remote -window-maximize "$window_id"
                    break
                fi
            done
        fi
    fi

    # guide
    if ((is_guide_mode)) ; then
        if ! el_flag check elive-help-guide-donation ; then
            if zenity --question --text="The Elive User Guide is not writed yet, please donate to Elive to support this project and finish the Documentation. Make a donation?" ; then
                web-launcher "http://www.elivecd.org/donate"
            fi
            el_flag add elive-help-guide-donation
        fi
        #evince $opts "/usr/share/elive-help/hotkeys/en/hotkeys.pdf"
    fi

    # check for possible updates
    if el_package_newer_check "elive-help" ; then
        if el_package_update_last_version --force "elive-help" ; then
            true
            #zenity --info --text="Elive Help has been updated to the last version"
        fi
    fi

}

#
#  MAIN
#
main "$@"



# vim: set foldmethod=marker :
